{
  "_from": "@faker-js/faker",
  "_id": "@faker-js/faker@7.6.0",
  "_inBundle": false,
  "_integrity": "sha512-XK6BTq1NDMo9Xqw/YkYyGjSsg44fbNwYRx7QK2CuoQgyy+f1rrTDHoExVM5PsyXCtfl2vs2vVJ0MN0yN6LppRw==",
  "_location": "/@faker-js/faker",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "@faker-js%2ffaker",
    "fetchSpec": "latest",
    "name": "@faker-js/faker",
    "raw": "@faker-js/faker",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "scope": "@faker-js",
    "type": "tag"
  },
  "_requiredBy": [
    "#DEV:/",
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/@faker-js/faker/-/faker-7.6.0.tgz",
  "_shasum": "9ea331766084288634a9247fcd8b84f16ff4ba07",
  "_spec": "@faker-js/faker",
  "_where": "/home/livquik/Desktop/karate_demo/myproject/src/test/java/test",
  "bugs": {
    "url": "https://github.com/faker-js/faker/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Generate massive amounts of fake contextual data",
  "devDependencies": {
    "@actions/github": "~5.1.1",
    "@algolia/client-search": "~4.14.2",
    "@types/glob": "~8.0.0",
    "@types/markdown-it": "~12.2.3",
    "@types/node": "~18.8.4",
    "@types/prettier": "~2.7.1",
    "@types/react": "~18.0.21",
    "@types/sanitize-html": "~2.6.2",
    "@types/validator": "~13.7.7",
    "@typescript-eslint/eslint-plugin": "~5.40.0",
    "@typescript-eslint/parser": "~5.40.0",
    "@vitest/coverage-c8": "~0.24.1",
    "@vitest/ui": "~0.24.1",
    "c8": "~7.12.0",
    "conventional-changelog-cli": "~2.2.2",
    "cypress": "~10.10.0",
    "esbuild": "~0.15.10",
    "eslint": "~8.25.0",
    "eslint-config-prettier": "~8.5.0",
    "eslint-define-config": "~1.7.0",
    "eslint-gitignore": "~0.1.0",
    "eslint-plugin-jsdoc": "~39.3.6",
    "eslint-plugin-prettier": "~4.2.1",
    "glob": "~8.0.3",
    "lint-staged": "~13.0.3",
    "mime-db": "~1.52.0",
    "npm-run-all": "~4.1.5",
    "picocolors": "~1.0.0",
    "prettier": "2.7.1",
    "prettier-plugin-organize-imports": "~3.1.1",
    "react": "~18.2.0",
    "react-dom": "~18.2.0",
    "rimraf": "~3.0.2",
    "sanitize-html": "~2.7.2",
    "simple-git-hooks": "~2.8.0",
    "standard-version": "~9.5.0",
    "tsx": "~3.10.1",
    "typedoc": "~0.23.16",
    "typedoc-plugin-missing-exports": "~1.0.0",
    "typescript": "~4.8.4",
    "validator": "~13.7.0",
    "vite": "~3.1.7",
    "vitepress": "1.0.0-alpha.19",
    "vitest": "~0.24.1"
  },
  "engines": {
    "node": ">=14.0.0",
    "npm": ">=6.0.0"
  },
  "exports": {
    ".": {
      "import": "./dist/esm/index.mjs",
      "require": "./dist/cjs/index.js",
      "types": "./dist/types/index.d.ts"
    },
    "./locale/*": {
      "import": "./dist/esm/locale/*.mjs",
      "require": "./dist/cjs/locale/*.js",
      "types": "./dist/types/locale/*.d.ts"
    },
    "./package.json": "./package.json"
  },
  "files": [
    "CHANGELOG.md",
    "CHANGELOG_old.md",
    "dist",
    "locale",
    "tsconfig.json"
  ],
  "homepage": "https://github.com/faker-js/faker#readme",
  "keywords": [
    "fake content generator",
    "fake contextual data",
    "fake contextual data generator",
    "fake data",
    "fake data generator",
    "fake-data",
    "fake-data-generator",
    "fake-generator",
    "faker",
    "faker-js",
    "faker.js",
    "fakerjs"
  ],
  "license": "MIT",
  "lint-staged": {
    "*": [
      "prettier --write --ignore-unknown"
    ],
    "**/*.ts": [
      "eslint --ext .ts"
    ]
  },
  "main": "dist/cjs/index.js",
  "module": "dist/esm/index.mjs",
  "name": "@faker-js/faker",
  "optionalDependencies": {},
  "packageManager": "pnpm@7.13.4",
  "readme": "<div align=\"center\">\n  <img src=\"./docs/public/logo.svg\" width=\"200\"/>\n  <h1>Faker</h1>\n  <p>Generate massive amounts of fake (but realistic) data for testing and development.</p>\n  \n  [![npm version](https://badgen.net/npm/v/@faker-js/faker)](https://www.npmjs.com/package/@faker-js/faker)\n  [![npm downloads](https://badgen.net/npm/dm/@faker-js/faker)](https://www.npmjs.com/package/@faker-js/faker)\n  [![Continuous Integration](https://github.com/faker-js/faker/actions/workflows/ci.yml/badge.svg)](https://github.com/faker-js/faker/actions/workflows/ci.yml)\n  [![codecov](https://codecov.io/gh/faker-js/faker/branch/main/graph/badge.svg?token=N61U168G08)](https://codecov.io/gh/faker-js/faker)\n  [![Chat on Discord](https://img.shields.io/badge/chat-discord-blue?style=flat&logo=discord)](https://chat.fakerjs.dev)\n  [![Open Collective](https://img.shields.io/opencollective/backers/fakerjs)](https://opencollective.com/fakerjs#section-contributors)\n  [![sponsor](https://img.shields.io/opencollective/all/fakerjs?label=sponsors)](https://opencollective.com/fakerjs)\n  \n</div>\n\n## ⚡️ Try it Online\n\n[![](https://developer.stackblitz.com/img/open_in_stackblitz.svg)](https://fakerjs.dev/new)\n\n[API Documentation](https://fakerjs.dev/guide/)\n\n## 🚀 Features\n\n- 💌 Addresses - Generate valid looking Addresses, Zip Codes, Street Names, States, and Countries!\n- ⏰ Time-based Data - Past, present, future, recent, soon... whenever!\n- 🌏 Localization - Set a locale to generate realistic looking Names, Addresses, and Phone Numbers.\n- 💸 Finance - Create stubbed out Account Details, Transactions, and Crypto Addresses.\n- 👠 Products - Generate Prices, Product Names, Adjectives, and Descriptions.\n- 👾 Hacker Jargon - “Try to reboot the SQL bus, maybe it will bypass the virtual application!”\n- 🧍 Names - Generate virtual humans with a complete online and offline identity.\n- 🔢 Numbers - Of course, we can also generate random numbers and strings.\n\n> **Note**: Faker tries to generate realistic data and not obvious fake data.\n> The generated names, addresses, emails, phone numbers, and/or other data might be coincidentally valid information.\n> Please do not send any of your messages/calls to them from your test setup.\n\n## 📦 Install\n\n```bash\nnpm install --save-dev @faker-js/faker\n```\n\n## 🪄 Usage\n\n```ts\nimport { faker } from '@faker-js/faker';\n// import { faker } from '@faker-js/faker/locale/de';\n\nexport const USERS: User[] = [];\n\nexport function createRandomUser(): User {\n  return {\n    userId: faker.datatype.uuid(),\n    username: faker.internet.userName(),\n    email: faker.internet.email(),\n    avatar: faker.image.avatar(),\n    password: faker.internet.password(),\n    birthdate: faker.date.birthdate(),\n    registeredAt: faker.date.past(),\n  };\n}\n\nArray.from({ length: 10 }).forEach(() => {\n  USERS.push(createRandomUser());\n});\n```\n\n## 💎 Modules\n\nAn in-depth overview of the API methods is available in the [documentation](https://fakerjs.dev/guide/).  \nThe API covers the following modules:\n\n| Module   | Example                                       | Output                                                                                             |\n| -------- | --------------------------------------------- | -------------------------------------------------------------------------------------------------- |\n| Address  | `faker.address.city()`                        | Lake Raoulfort                                                                                     |\n| Animal   | `faker.animal.cat()`                          | Norwegian Forest Cat                                                                               |\n| Color    | `faker.color.rgb()`                           | #cdfcdc                                                                                            |\n| Commerce | `faker.commerce.product()`                    | Polo t-shirt                                                                                       |\n| Company  | `faker.company.companyName()`                 | Zboncak and Sons                                                                                   |\n| Database | `faker.database.engine()`                     | MyISAM                                                                                             |\n| Datatype | `faker.datatype.uuid()`                       | 7b16dd12-935e-4acc-8381-b1e457bf0176                                                               |\n| Date     | `faker.date.past()`                           | Sat Oct 20 2018 04:19:38 GMT-0700 (Pacific Daylight Time)                                          |\n| Finance  | `faker.finance.amount()`                      | ¥23400 (After setting locale)                                                                      |\n| Git      | `faker.git.commitMessage()`                   | feat: add products list page                                                                       |\n| Hacker   | `faker.hacker.phrase()`                       | Try to reboot the SQL bus, maybe it will bypass the virtual application!                           |\n| Helpers  | `faker.helpers.arrayElement(['a', 'b', 'c'])` | b                                                                                                  |\n| Image    | `faker.image.cats()`                          | https://loremflickr.com/640/480/cats <img src=\"https://loremflickr.com/640/480/cats\" height=\"100\"> |\n| Internet | `faker.internet.domainName()`                 | muddy-neuropathologist.net                                                                         |\n| Lorem    | `faker.lorem.paragraph()`                     | Porro nulla id vero perspiciatis nulla nihil. ...                                                  |\n| Music    | `faker.music.genre()`                         | R&B                                                                                                |\n| Name     | `faker.name.firstName()`                      | Cameron                                                                                            |\n| Phone    | `faker.phone.phoneNumber()`                   | +1 291-299-0192                                                                                    |\n| Random   | `faker.random.locale()`                       | fr_CA                                                                                              |\n| Science  | `faker.science.unit()`                        | `{ name: 'meter', symbol: 'm' }`                                                                   |\n| System   | `faker.system.directoryPath()`                | /root                                                                                              |\n| Vehicle  | `faker.vehicle.vehicle()`                     | Lamborghini Camry                                                                                  |\n| Word     | `faker.word.adjective()`                      | adorable                                                                                           |\n\n### Templates\n\nFaker contains a generator method `faker.helpers.fake` for combining faker API methods using a mustache string format.\n\n```ts\nconsole.log(\n  faker.helpers.fake(\n    'Hello {{name.prefix}} {{name.lastName}}, how are you today?'\n  )\n);\n```\n\n## 🌏 Localization\n\nFaker has support for multiple locales.\n\nThe default language locale is set to English.\n\nSetting a new locale is simple:\n\n```ts\n// sets locale to de\nfaker.locale = 'de';\n```\n\nSee our documentation for a list of [provided languages](https://fakerjs.dev/guide/localization.html#available-locales)\n\nPlease note: not every locale provides data for every module. In our pre-made locales, we fallback to English in such a case as this is the most complete and most commonly used language.\n\n## ⚙️ Setting a randomness seed\n\nIf you want consistent results, you can set your own seed:\n\n```ts\nfaker.seed(123);\n\nconst firstRandom = faker.datatype.number();\n\n// Setting the seed again resets the sequence.\nfaker.seed(123);\n\nconst secondRandom = faker.datatype.number();\n\nconsole.log(firstRandom === secondRandom);\n```\n\n## 🤝 Sponsors\n\nFaker is an MIT-licensed open source project with its ongoing development made possible entirely by the support of these awesome backers\n\n### Sponsors\n\n![](https://opencollective.com/fakerjs/organizations.svg)\n\n### Backers\n\n![](https://opencollective.com/fakerjs/individuals.svg)\n\n## ✨ Contributing\n\nPlease make sure to read the [Contributing Guide](https://github.com/faker-js/faker/blob/main/CONTRIBUTING.md) before making a pull request.\n\n## 📘 Credits\n\nThanks to all the people who already contributed to Faker!\n\n<a href=\"https://github.com/faker-js/faker/graphs/contributors\"><img src=\"https://opencollective.com/fakerjs/contributors.svg?width=800\" /></a>\n\nThe [fakerjs.dev](https://fakerjs.dev) website is kindly hosted by the Netlify Team. Also the search functionality is powered by [algolia](https://www.algolia.com).\n\n## 📝 Changelog\n\nDetailed changes for each release are documented in the [release notes](https://github.com/faker-js/faker/blob/main/CHANGELOG.md).\n\n## 📜 What happened to the original faker.js?\n\nRead the [team update](https://fakerjs.dev/update.html) (January 14th, 2022).\n\n## 🔑 License\n\n[MIT](https://github.com/faker-js/faker/blob/main/LICENSE)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/faker-js/faker.git"
  },
  "scripts": {
    "build": "run-s build:clean build:code build:types",
    "build:clean": "rimraf dist",
    "build:code": "tsx ./scripts/bundle.ts",
    "build:types": "tsc --emitDeclarationOnly --outDir dist/types",
    "clean": "rimraf coverage .eslintcache dist docs/.vitepress/dist pnpm-lock.yaml node_modules",
    "copy:mime-types": "tsx ./scripts/copyMimeTypes.ts",
    "coverage": "vitest run --coverage",
    "cypress": "cypress",
    "docs:build": "run-s docs:prepare docs:build:run",
    "docs:build:ci": "run-s build docs:build",
    "docs:build:run": "vitepress build docs",
    "docs:dev": "run-s docs:prepare docs:dev:run",
    "docs:dev:run": "vitepress dev docs",
    "docs:prepare": "run-s generate:api-docs",
    "docs:serve": "vitepress serve docs --port 5173",
    "docs:test:e2e:ci": "run-s docs:build:ci docs:test:e2e:run",
    "docs:test:e2e:open": "run-p --race docs:serve \"cypress open\"",
    "docs:test:e2e:run": "run-p --race docs:serve \"cypress run\"",
    "format": "prettier --write .",
    "generate:api-docs": "tsx ./scripts/apidoc.ts",
    "generate:locales": "tsx ./scripts/generateLocales.ts",
    "lint": "eslint --cache --cache-strategy content .",
    "prepublishOnly": "pnpm run clean && pnpm install && pnpm run build",
    "release": "standard-version",
    "test": "vitest",
    "ts-check:scripts": "tsc --project tsconfig.check-scripts.json",
    "ts-check:tests": "tsc --project tsconfig.check-tests.json"
  },
  "simple-git-hooks": {
    "commit-msg": "npx tsx scripts/verifyCommit.ts $1",
    "pre-commit": "npx lint-staged --concurrent false"
  },
  "types": "index.d.ts",
  "typesVersions": {
    ">=4.0": {
      "*": [
        "dist/types/*"
      ]
    }
  },
  "version": "7.6.0"
}
