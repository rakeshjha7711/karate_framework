{"failedCount":1,"prefixedPath":"classpath:test\/generateToken.feature","packageQualifiedName":"test.generateToken","loopIndex":-1,"relativePath":"test\/generateToken.feature","scenarioResults":[{"sectionIndex":0,"stepResults":[{"result":{"nanos":61492251,"errorMessage":"js failed:\n>>>>\n01: karate.call('generateJwtToken.js')\n<<<<\norg.graalvm.polyglot.PolyglotException: js failed:\n>>>>\n01: (module.exports = {\n02:   decode: require('.\/decode'),\n03:   verify: require('.\/verify'),\n04:   sign: require('.\/sign'),\n05:   JsonWebTokenError: require('.\/lib\/JsonWebTokenError'),\n06:   NotBeforeError: require('.\/lib\/NotBeforeError'),\n07:   TokenExpiredError: require('.\/lib\/TokenExpiredError'),\n08: };\n09: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:8:1 Expected ) but found ;\n};\n ^\nUnnamed:9:0 Expected ; but found )\n)\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:59)\n- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:162)\n- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:149)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:59)\n- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:162)\n- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:149)\n- <js>.generateJwtToken(Unnamed:2)\n\nclasspath:test\/generateToken.feature:4","millis":61.492251,"status":"failed"},"step":{"background":true,"line":4,"prefix":"*","index":0,"text":"def token = karate.call('generateJwtToken.js')"},"stepLog":"15:39:11.830 karate.env system property was: null \n15:39:11.967 classpath:test\/generateToken.feature:4\n* def token = karate.call('generateJwtToken.js')\njs failed:\n>>>>\n01: karate.call('generateJwtToken.js')\n<<<<\norg.graalvm.polyglot.PolyglotException: js failed:\n>>>>\n01: (module.exports = {\n02:   decode: require('.\/decode'),\n03:   verify: require('.\/verify'),\n04:   sign: require('.\/sign'),\n05:   JsonWebTokenError: require('.\/lib\/JsonWebTokenError'),\n06:   NotBeforeError: require('.\/lib\/NotBeforeError'),\n07:   TokenExpiredError: require('.\/lib\/TokenExpiredError'),\n08: };\n09: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:8:1 Expected ) but found ;\n};\n ^\nUnnamed:9:0 Expected ; but found )\n)\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:59)\n- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:162)\n- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:149)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:59)\n- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:162)\n- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:149)\n- <js>.generateJwtToken(Unnamed:2)\n\nclasspath:test\/generateToken.feature:4\n"},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"comments":["# Given def jwtToken = call generateJwtToken(payload, secretKey, expirationMillis)"],"line":9,"prefix":"And","index":0,"text":"header Authorization = jwtToken"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":11,"prefix":"Given","index":1,"text":"url 'https:\/\/apitest.livquik.com\/api\/v1\/bnpl\/processPayment'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":12,"prefix":"And","index":2,"text":"header TENANT = 'KOTAK_BNPL'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":13,"prefix":"And","index":3,"text":"header Content-Type = 'application\/json'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":14,"prefix":"And","index":4,"text":"header public-key = 'Bearer cGtfbGl2ZV94NjIzRkpNZmFJbmk6c2tfbGl2ZV9xeUVwSUJaQWQxcG1aNk9oMklUOG43UjlmSzFVbmM2aEQ3VGtHSUxy'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":15,"prefix":"And","index":5,"text":"header User-Agent = 'PostmanRuntime\/7.31.1'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":16,"prefix":"When","index":6,"text":"method POST"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":17,"prefix":"Then","index":7,"text":"status 200"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":18,"prefix":"And","index":8,"text":"match $.result.status == 'failed'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":19,"prefix":"And","index":9,"text":"match $.result.statusCode == 'PAY_1002'"}},{"result":{"nanos":0,"millis":0.0,"status":"skipped"},"step":{"line":20,"prefix":"And","index":10,"text":"match $.result.message == 'Invalid credentials.'"}}],"line":7,"description":"","durationMillis":61.492251,"failed":true,"error":"js failed:\n>>>>\n01: karate.call('generateJwtToken.js')\n<<<<\norg.graalvm.polyglot.PolyglotException: js failed:\n>>>>\n01: (module.exports = {\n02:   decode: require('.\/decode'),\n03:   verify: require('.\/verify'),\n04:   sign: require('.\/sign'),\n05:   JsonWebTokenError: require('.\/lib\/JsonWebTokenError'),\n06:   NotBeforeError: require('.\/lib\/NotBeforeError'),\n07:   TokenExpiredError: require('.\/lib\/TokenExpiredError'),\n08: };\n09: )\n<<<<\norg.graalvm.polyglot.PolyglotException: SyntaxError: Unnamed:8:1 Expected ) but found ;\n};\n ^\nUnnamed:9:0 Expected ; but found )\n)\n^\n\n- org.graalvm.polyglot.Context.eval(Context.java:425)\n- com.intuit.karate.graal.JsEngine.evalForValue(JsEngine.java:139)\n- com.intuit.karate.graal.JsEngine.eval(JsEngine.java:135)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1190)\n- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:59)\n- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:162)\n- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:149)\n\n- com.intuit.karate.graal.JsEngine.fromJsEvalException(JsEngine.java:224)\n- com.intuit.karate.core.ScenarioEngine.evalJs(ScenarioEngine.java:1192)\n- com.intuit.karate.core.ScenarioFileReader.readFile(ScenarioFileReader.java:59)\n- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:162)\n- com.intuit.karate.core.ScenarioBridge.call(ScenarioBridge.java:149)\n- <js>.generateJwtToken(Unnamed:2)\n\nclasspath:test\/generateToken.feature:4","executorName":"main","name":"Generate JWT token and use it in header","startTime":1682417351583,"refId":"[1:7]","endTime":1682417351968,"exampleIndex":-1}],"callDepth":0,"name":"process payment api testing to check error message validation","description":"","resultDate":"2023-04-25 03:39:11 pm","durationMillis":61.492251,"passedCount":0}